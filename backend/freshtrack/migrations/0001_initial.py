# Generated by Django 4.2.6 on 2023-10-20 14:40

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import freshtrack.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('external_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50, null=True)),
                ('pantry_min', models.IntegerField(blank=True, null=True)),
                ('pantry_max', models.IntegerField(blank=True, null=True)),
                ('pantry_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('pantry_tips', models.TextField(blank=True, null=True)),
                ('pantry_after_opening_min', models.IntegerField(blank=True, null=True)),
                ('pantry_after_opening_max', models.IntegerField(blank=True, null=True)),
                ('pantry_after_opening_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('refrigerate_min', models.IntegerField(blank=True, null=True)),
                ('refrigerate_max', models.IntegerField(blank=True, null=True)),
                ('refrigerate_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('refrigerate_tips', models.TextField(blank=True, null=True)),
                ('refrigerate_after_opening_min', models.IntegerField(blank=True, null=True)),
                ('refrigerate_after_opening_max', models.IntegerField(blank=True, null=True)),
                ('refrigerate_after_opening_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('refrigerate_after_thawing_min', models.IntegerField(blank=True, null=True)),
                ('refrigerate_after_thawing_max', models.IntegerField(blank=True, null=True)),
                ('refrigerate_after_thawing_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('freezer_min', models.IntegerField(blank=True, null=True)),
                ('freezer_max', models.IntegerField(blank=True, null=True)),
                ('freezer_tips', models.TextField(blank=True, null=True)),
                ('freezer_metric', enumfields.fields.EnumField(blank=True, enum=freshtrack.enums.Metric, max_length=20, null=True)),
                ('expired', models.BooleanField(default=False)),
                ('consumed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='freshtrack.foodcategory')),
            ],
        ),
    ]
